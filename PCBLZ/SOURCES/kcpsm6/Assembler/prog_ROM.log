KCPSM6 Assembler log file for program 'C:\Users\240689\PCBLZ\SOURCES\kcpsm6\Assembler\prog_ROM.psm'.
Generated by KCPSM6 version v2.70
Ken Chapman - Xilinx Ltd - 16th May 2014

Assembly datestamp: 17 Apr 2025
Assembly timestamp: 10:13:29

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: FFF hex
Nominal program memory size: 4K (4096)   address(11:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 108
Memory locations available: 3988


Assembly listing

 Addr Code                 Instruction

 000                       ;==============================================================================;
 000                       ;
 000                       ; Michal Kubicek (michal.kubicek@email.cz)
 000                       ;
 000                       ;==============================================================================;
 000                       ;   __  __       _
 000                       ;  |  \/  |     (_)
 000                       ;  | \  / | __ _ _ _ __
 000                       ;  | |\/| |/ _' | | '_ \
 000                       ;  | |  | | (_| | | | | |
 000                       ;  |_|  |_|\__,_|_|_| |_|
 000                       ;
 000                       ;
 000                       ;
 000                       ;==============================================================================;
 000                       ; Startup and workaround for "Vivado Hardware Manager" problem
 000                       ;==============================================================================;
 000                       ;
 000  22004                JUMP 004[cold_start]            ; Avoid address 003 on start up
 001  22004                JUMP 004[cold_start]
 002  22004                JUMP 004[cold_start]
 003  22004                JUMP 004[cold_start]            ; Address 003
 004                       ;
 004           cold_start: 
 004  010FF                LOAD s0, FF
 005  2D024                OUTPUT s0, 24[ID_UART_RESET]
 006  01000                LOAD s0, 00
 007  2D024                OUTPUT s0, 24[ID_UART_RESET]
 008                       ;
 008  0100C                LOAD s0, 0C
 009  2D003                OUTPUT s0, 03[ID_7SEG_DIG_1]
 00A  01000                LOAD s0, 00
 00B  2D004                OUTPUT s0, 04[ID_7SEG_DIG_2]
 00C  0100F                LOAD s0, 0F
 00D  2D005                OUTPUT s0, 05[ID_7SEG_DIG_3]
 00E  0100E                LOAD s0, 0E
 00F  2D006                OUTPUT s0, 06[ID_7SEG_DIG_4]
 010  01080                LOAD s0, 80
 011  2D010                OUTPUT s0, 10[ID_PWM_REF_0]
 012  01040                LOAD s0, 40
 013  2D011                OUTPUT s0, 11[ID_PWM_REF_1]
 014  01020                LOAD s0, 20
 015  2D012                OUTPUT s0, 12[ID_PWM_REF_2]
 016  01010                LOAD s0, 10
 017  2D013                OUTPUT s0, 13[ID_PWM_REF_3]
 018  01008                LOAD s0, 08
 019  2D014                OUTPUT s0, 14[ID_PWM_REF_4]
 01A  01004                LOAD s0, 04
 01B  2D015                OUTPUT s0, 15[ID_PWM_REF_5]
 01C  01002                LOAD s0, 02
 01D  2D016                OUTPUT s0, 16[ID_PWM_REF_6]
 01E  01001                LOAD s0, 01
 01F  2D017                OUTPUT s0, 17[ID_PWM_REF_7]
 020                       ;
 020                       ;
 020                       ;
 020                       ;==============================================================================;
 020                       ; Main program loop
 020                       ;==============================================================================;
 020                       ;
 020  2004E     main_loop: CALL 04E[wait_100ms]
 021                       ;
 021  09300                INPUT s3, 00[ID_BTN]            ; read state of buttons
 022                       ;
 022  09120                INPUT s1, 20[ID_UART_STATUS]
 023  1D100                COMPARE s1, 00[0'd]
 024  32026                JUMP Z, 026[uart_rdy]
 025  22020                JUMP 020[main_loop]
 026                       ;
 026  1D301      uart_rdy: COMPARE s3, 01[1'd]
 027  3202E                JUMP Z, 02E[btn_1_active]
 028  1D302                COMPARE s3, 02[2'd]
 029  32035                JUMP Z, 035[btn_2_active]
 02A  1D304                COMPARE s3, 04[4'd]
 02B  3203C                JUMP Z, 03C[btn_3_active]
 02C  1D308                COMPARE s3, 08[8'd]
 02D  32043                JUMP Z, 043[btn_4_active]
 02E  01146  btn_1_active: LOAD s1, 46["F"]
 02F  2D121                OUTPUT s1, 21[ID_UART_DATA_OUT]
 030  01101                LOAD s1, 01
 031  2D122                OUTPUT s1, 22[ID_UART_WRITE]
 032  01100                LOAD s1, 00
 033  2D122                OUTPUT s1, 22[ID_UART_WRITE]
 034  22020                JUMP 020[main_loop]
 035  01153  btn_2_active: LOAD s1, 53["S"]
 036  2D121                OUTPUT s1, 21[ID_UART_DATA_OUT]
 037  01101                LOAD s1, 01
 038  2D122                OUTPUT s1, 22[ID_UART_WRITE]
 039  01100                LOAD s1, 00
 03A  2D122                OUTPUT s1, 22[ID_UART_WRITE]
 03B  22020                JUMP 020[main_loop]
 03C  01154  btn_3_active: LOAD s1, 54["T"]
 03D  2D121                OUTPUT s1, 21[ID_UART_DATA_OUT]
 03E  01101                LOAD s1, 01
 03F  2D122                OUTPUT s1, 22[ID_UART_WRITE]
 040  01100                LOAD s1, 00
 041  2D122                OUTPUT s1, 22[ID_UART_WRITE]
 042  22020                JUMP 020[main_loop]
 043  01141  btn_4_active: LOAD s1, 41["A"]
 044  2D121                OUTPUT s1, 21[ID_UART_DATA_OUT]
 045  01101                LOAD s1, 01
 046  2D122                OUTPUT s1, 22[ID_UART_WRITE]
 047  01100                LOAD s1, 00
 048  2D122                OUTPUT s1, 22[ID_UART_WRITE]
 049  22020                JUMP 020[main_loop]
 04A                       ;
 04A                       ;==============================================================================;
 04A                       ; Include other source files
 04A                       ;==============================================================================;
 04A                       ;
 04A                       INCLUDE "C:\Users\240689\PCBLZ\SOURCES\kcpsm6\Assembler\prog_ROM_addr.psm"["prog_ROM_addr.psm"]
 04A                       ;==============================================================================;
 04A                       ;
 04A                       ; Michal Kubicek (michal.kubicek@email.cz)
 04A                       ;
 04A                       ;==============================================================================;
 04A                       ;               _     _
 04A                       ;      /\      | |   | |
 04A                       ;     /  \   __| | __| |_ __ ___  ___ ___   ___ _ __   __ _  ___ ___
 04A                       ;    / /\ \ / _' |/ _' | '__/ _ \/ __/ __| / __| '_ \ / _' |/ __/ _ \
 04A                       ;   / ____ \ (_| | (_| | | |  __/\__ \__ \ \__ \ |_) | (_| | (_|  __/
 04A                       ;  /_/    \_\__,_|\__,_|_|  \___||___/___/ |___/ .__/ \__,_|\___\___|
 04A                       ;                                              | |
 04A                       ;                                              |_|
 04A                       ;
 04A                       ;==============================================================================;
 04A                       ;
 04A                       CONSTANT ID_BTN, 00
 04A                       CONSTANT ID_SW, 01
 04A                       CONSTANT ID_LED, 02
 04A                       CONSTANT ID_7SEG_DIG_1, 03
 04A                       CONSTANT ID_7SEG_DIG_2, 04
 04A                       CONSTANT ID_7SEG_DIG_3, 05
 04A                       CONSTANT ID_7SEG_DIG_4, 06
 04A                       CONSTANT ID_7SEG_DP, 07
 04A                       CONSTANT ID_7SEG_DOTS, 08
 04A                       CONSTANT ID_PWM_REF_0, 10
 04A                       CONSTANT ID_PWM_REF_1, 11
 04A                       CONSTANT ID_PWM_REF_2, 12
 04A                       CONSTANT ID_PWM_REF_3, 13
 04A                       CONSTANT ID_PWM_REF_4, 14
 04A                       CONSTANT ID_PWM_REF_5, 15
 04A                       CONSTANT ID_PWM_REF_6, 16
 04A                       CONSTANT ID_PWM_REF_7, 17
 04A                       CONSTANT ID_UART_STATUS, 20
 04A                       CONSTANT ID_UART_DATA_OUT, 21
 04A                       CONSTANT ID_UART_WRITE, 22
 04A                       CONSTANT ID_UART_READ, 23
 04A                       CONSTANT ID_UART_RESET, 24
 04A                       CONSTANT ID_UART_DATA_IN, 25
 04A                       ;
 04A                       ;
 04A                       ;==============================================================================;
 04A                       INCLUDE "C:\Users\240689\PCBLZ\SOURCES\kcpsm6\Assembler\prog_ROM_delay.psm"["prog_ROM_delay.psm"]
 04A                       ;==============================================================================;
 04A                       ;
 04A                       ; Michal Kubicek (michal.kubicek@email.cz)
 04A                       ;
 04A                       ;==============================================================================;
 04A                       ;  __          __   _ _                                  _
 04A                       ;  \ \        / /  (_) |                                | |
 04A                       ;   \ \  /\  / /_ _ _| |_   _ __  _ __ ___   ___ ___  __| |_   _ _ __ ___  ___
 04A                       ;    \ \/  \/ / _' | | __| | '_ \| '__/ _ \ / __/ _ \/ _' | | | | '__/ _ \/ __|
 04A                       ;     \  /\  / (_| | | |_  | |_) | | | (_) | (_|  __/ (_| | |_| | | |  __/\__ \
 04A                       ;      \/  \/ \__,_|_|\__| | .__/|_|  \___/ \___\___|\__,_|\__,_|_|  \___||___/
 04A                       ;                          | |
 04A                       ;                          |_|
 04A                       ;
 04A                       ;==============================================================================;
 04A                       ; Blocking wait procedures (times valid for 50 MHz clock)
 04A                       ;==============================================================================;
 04A                       ;
 04A  0100D       wait_1s: LOAD s0, 0D
 04B  0115E                LOAD s1, 5E
 04C  01260                LOAD s2, 60
 04D  22062                JUMP 062[wait_common]
 04E                       ;
 04E  01065    wait_100ms: LOAD s0, 65
 04F  01189                LOAD s1, 89
 050  0120A                LOAD s2, 0A
 051  22062                JUMP 062[wait_common]
 052                       ;
 052  01021     wait_10ms: LOAD s0, 21
 053  011F4                LOAD s1, F4
 054  01201                LOAD s2, 01
 055  22062                JUMP 062[wait_common]
 056                       ;
 056  01067      wait_1ms: LOAD s0, 67
 057  01118                LOAD s1, 18
 058  01201                LOAD s2, 01
 059  22062                JUMP 062[wait_common]
 05A                       ;
 05A  0106E    wait_100us: LOAD s0, 6E
 05B  01102                LOAD s1, 02
 05C  01201                LOAD s2, 01
 05D  22062                JUMP 062[wait_common]
 05E                       ;
 05E  0103C     wait_10us: LOAD s0, 3C
 05F  01100                LOAD s1, 00
 060  01201                LOAD s2, 01
 061  22062                JUMP 062[wait_common]
 062                       ;
 062  19001   wait_common: SUB s0, 01
 063  1B100                SUBCY s1, 00
 064  1B200                SUBCY s2, 00
 065  36062                JUMP NZ, 062[wait_common]
 066  25000                RETURN 
 067                       ;
 067                       ;==============================================================================;
 067                       INCLUDE "C:\Users\240689\PCBLZ\SOURCES\kcpsm6\Assembler\prog_ROM_IRQ.psm"["prog_ROM_IRQ.psm"]
 067                       ;==============================================================================;
 067                       ;
 067                       ; Michal Kubicek (michal.kubicek@email.cz)
 067                       ;
 067                       ;==============================================================================;
 067                       ;  _____       _                             _
 067                       ; |_   _|     | |                           | |
 067                       ;   | |  _ __ | |_ ___ _ __ _ __ _   _ _ __ | |_
 067                       ;   | | | '_ \| __/ _ \ '__| '__| | | | '_ \| __|
 067                       ;  _| |_| | | | ||  __/ |  | |  | |_| | |_) | |_
 067                       ; |_____|_| |_|\__\___|_|  |_|   \__,_| .__/ \__|
 067                       ;                                     | |
 067                       ;                                     |_|
 067                       ;
 067                       ;==============================================================================;
 067                       ;
 067                       ; register backup
 067  37001    IntService: REGBANK B
 068                       ;
 068                       ;==============================================================================;
 068                       ;
 068  0D000                TEST s0, 00                     ; dummy
 069                       ;
 069                       ;
 069                       ;
 069                       ;==============================================================================;
 069                       ;
 069                       ; register backup
 069  37000       Int_End: REGBANK A
 06A  29001                RETURNI ENABLE                  ; Return from interrupt subroutine, enable interrupt
 06B                       ;
 06B                       ;==============================================================================;
 06B                       ;
 06B                       ;
 06B                       ;==============================================================================;
 06B                       ; Interrupt jump instruction
 06B                       ;==============================================================================;
 06B                       ;
 FFF                       ADDRESS FFF                     ; interrupt
 FFF  22067                JUMP 067[IntService]            ; jump to interrupt subroutine address
 FFF                       ;
 FFF                       ;==============================================================================;


All unused memory locations contain zero (equivalent to 'LOAD s0, s0')



List of PSM files that have been assembled

C:\Users\240689\PCBLZ\SOURCES\kcpsm6\Assembler\prog_ROM.psm
C:\Users\240689\PCBLZ\SOURCES\kcpsm6\Assembler\prog_ROM_addr.psm
C:\Users\240689\PCBLZ\SOURCES\kcpsm6\Assembler\prog_ROM_delay.psm
C:\Users\240689\PCBLZ\SOURCES\kcpsm6\Assembler\prog_ROM_IRQ.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   10'd         
 timestamp_minutes 13'd         
 timestamp_seconds 29'd         
 datestamp_year    25'd         
 datestamp_month   4'd          
 datestamp_day     17'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 ID_BTN            00           prog_ROM_addr.psm
 ID_SW             01           prog_ROM_addr.psm
 ID_LED            02           prog_ROM_addr.psm
 ID_7SEG_DIG_1     03           prog_ROM_addr.psm
 ID_7SEG_DIG_2     04           prog_ROM_addr.psm
 ID_7SEG_DIG_3     05           prog_ROM_addr.psm
 ID_7SEG_DIG_4     06           prog_ROM_addr.psm
 ID_7SEG_DP        07           prog_ROM_addr.psm
 ID_7SEG_DOTS      08           prog_ROM_addr.psm
 ID_PWM_REF_0      10           prog_ROM_addr.psm
 ID_PWM_REF_1      11           prog_ROM_addr.psm
 ID_PWM_REF_2      12           prog_ROM_addr.psm
 ID_PWM_REF_3      13           prog_ROM_addr.psm
 ID_PWM_REF_4      14           prog_ROM_addr.psm
 ID_PWM_REF_5      15           prog_ROM_addr.psm
 ID_PWM_REF_6      16           prog_ROM_addr.psm
 ID_PWM_REF_7      17           prog_ROM_addr.psm
 ID_UART_STATUS    20           prog_ROM_addr.psm
 ID_UART_DATA_OUT  21           prog_ROM_addr.psm
 ID_UART_WRITE     22           prog_ROM_addr.psm
 ID_UART_READ      23           prog_ROM_addr.psm
 ID_UART_RESET     24           prog_ROM_addr.psm
 ID_UART_DATA_IN   25           prog_ROM_addr.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.70"        
 datestamp$        "17 Apr 2025"  
 timestamp$        "10:13:29"     



List of line labels

   Label          Addr  Source PSM File

   cold_start     004   prog_ROM.psm
   main_loop      020   prog_ROM.psm
   uart_rdy       026   prog_ROM.psm
   btn_1_active   02E   prog_ROM.psm
   btn_2_active   035   prog_ROM.psm
   btn_3_active   03C   prog_ROM.psm
   btn_4_active   043   prog_ROM.psm
 * wait_1s        04A   prog_ROM_delay.psm
   wait_100ms     04E   prog_ROM_delay.psm
 * wait_10ms      052   prog_ROM_delay.psm
 * wait_1ms       056   prog_ROM_delay.psm
 * wait_100us     05A   prog_ROM_delay.psm
 * wait_10us      05E   prog_ROM_delay.psm
   wait_common    062   prog_ROM_delay.psm
   IntService     067   prog_ROM_IRQ.psm
 * Int_End        069   prog_ROM_IRQ.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD             44
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD               -
 ADDCY             -
 SUB               1
 SUBCY             2

 TEST              1
 TESTCY            -
 COMPARE           5
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           2

 INPUT             2
 OUTPUT           26
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            -
 RETURNI           1

 JUMP             22
 JUMP@             -
 CALL              1
 CALL@             -
 RETURN            1
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
